workdir: "./work"
proxy:
  addr: "0.0.0.0:6000"
  tcp-keep-alive: true
  max-connections: 1000
  pd-addrs: "127.0.0.1:2379"
  # proxy-protocol: "v2"
metrics:
api:
  addr: "0.0.0.0:3080"
  enable-basic-auth: false
  user: ""
  password: ""
log:
  level: "info"
  encoder: "tidb"
  log-file:
    filename: ""
    max-size: 300
    max-days: 1
    max-backups: 1
security:
  rsa-key-size: 4096
  # tls object is either of type server, client, or peer
  # xxxx:
  #   ca: ca.pem
  #   cert: c.pem
  #   key: k.pem
  #   auto-certs: true
  #   skip-ca: trure
  # client object:
  #   1. requires: ca or skip-ca(skip verify server certs)
  #   2. optionally: cert/key will be used if server asks
  #   3. useless/forbid: auto-certs
  # server object:
  #   1. requires: cert/key or auto-certs(generate a temporary cert, mostly for testing)
  #   2. optionally: ca will enable server-side client verification.
  #   3. useless/forbid: skip-ca
  # peer object:
  #   1. requires: cert/key/ca or auto-certs
  #   2. useless/forbid: skip-ca
  cluster-tls: # client object
    # access to other components like TiDB or PD, will use this
    # skip-ca: true
  sql-tls: # client object
    # access to TiDB sql port, it has a standalone TLS configuration
    skip-ca: true
  server-tls: # server object
    # proxy SQL or HTTP port will use this
    # auto-certs: true
  peer-tls: # peer object
    # internal communication between proxies
    # auto-certs: true
advance:
  # ignore-wrong-namespace: true
  # peer-port: "3081"
  # watch-interval: "10m"
