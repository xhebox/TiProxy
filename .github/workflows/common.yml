name: make
on:
  workflow_call:
    inputs:
      debug:
        type: boolean
        description: "set tmate on failure"
        required: true
      target:
        type: string
        description: "makefile target"
        required: true
      ref:
        type: string
        description: "checkout specific ref"
        required: true
      all_platform:
        type: boolean
        description: "test on all platforms or not"
        default: false

defaults:
  run:
    shell: bash

jobs:
  make:
    strategy:
      matrix:
        platform: ${{ inputs.all_platform && fromJSON('["ubuntu-latest", "macos-latest", "windows-latest"]') || fromJSON('["ubuntu-latest"]') }}
    runs-on: ${{ matrix.platform }}
    steps:
      - if: ${{ runner.os == 'Windows' }}
        name: Use GNU tar for faster cache restore
        shell: cmd
        run: |
          echo "Adding GNU tar to PATH"
          echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"
      - name: "checkout repo"
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - name: "setup golang"
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          check-latest: true
      - name: "set vars"
        id: cache
        run: |
          echo "::set-output name=go_cache::$(go env GOCACHE)"
          echo "::set-output name=go_mod_cache::$(go env GOMODCACHE)"
      - name: "try to use build cache"
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.cache.outputs.go_cache }}
            ${{ steps.cache.outputs.go_mod_cache }}
          key: ${{ runner.os }}-go-${{ inputs.target == 'cache' && github.run_id || hashFiles('**/go.sum')}}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: make ${{ inputs.target }} 
        run: make ${{ inputs.target }}
      - name: "set up tmate session if necessary"
        if: ${{ failure() && inputs.debug }}
        uses: mxschmitt/action-tmate@v3
